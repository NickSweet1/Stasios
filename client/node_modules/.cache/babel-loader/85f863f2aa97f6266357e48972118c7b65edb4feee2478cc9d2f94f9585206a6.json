{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nconst defaultTimestep = 1 / 60 * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\" ? () => performance.now() : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\" ? callback => window.requestAnimationFrame(callback) : callback => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\nfunction createRenderStep(runNextFrame) {\n  let toRun = [];\n  let toRunNextFrame = [];\n  let numToRun = 0;\n  let isProcessing = false;\n  let flushNextFrame = false;\n  const toKeepAlive = new WeakSet();\n  const step = {\n    schedule: (callback, keepAlive = false, immediate = false) => {\n      const addToCurrentFrame = immediate && isProcessing;\n      const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n      if (keepAlive) toKeepAlive.add(callback);\n      if (buffer.indexOf(callback) === -1) {\n        buffer.push(callback);\n        if (addToCurrentFrame && isProcessing) numToRun = toRun.length;\n      }\n      return callback;\n    },\n    cancel: callback => {\n      const index = toRunNextFrame.indexOf(callback);\n      if (index !== -1) toRunNextFrame.splice(index, 1);\n      toKeepAlive.delete(callback);\n    },\n    process: frameData => {\n      if (isProcessing) {\n        flushNextFrame = true;\n        return;\n      }\n      isProcessing = true;\n      [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n      toRunNextFrame.length = 0;\n      numToRun = toRun.length;\n      if (numToRun) {\n        for (let i = 0; i < numToRun; i++) {\n          const callback = toRun[i];\n          callback(frameData);\n          if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n          }\n        }\n      }\n      isProcessing = false;\n      if (flushNextFrame) {\n        flushNextFrame = false;\n        step.process(frameData);\n      }\n    }\n  };\n  return step;\n}\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n  delta: 0,\n  timestamp: 0\n};\nconst stepsOrder = [\"read\", \"update\", \"preRender\", \"render\", \"postRender\"];\nconst steps = stepsOrder.reduce((acc, key) => {\n  acc[key] = createRenderStep(() => runNextFrame = true);\n  return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n  const step = steps[key];\n  acc[key] = (process, keepAlive = false, immediate = false) => {\n    if (!runNextFrame) startLoop();\n    return step.schedule(process, keepAlive, immediate);\n  };\n  return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n  acc[key] = steps[key].cancel;\n  return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n  acc[key] = () => steps[key].process(frame);\n  return acc;\n}, {});\nconst processStep = stepId => steps[stepId].process(frame);\nconst processFrame = timestamp => {\n  runNextFrame = false;\n  frame.delta = useDefaultElapsed ? defaultTimestep : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n  frame.timestamp = timestamp;\n  isProcessing = true;\n  stepsOrder.forEach(processStep);\n  isProcessing = false;\n  if (runNextFrame) {\n    useDefaultElapsed = false;\n    onNextFrame(processFrame);\n  }\n};\nconst startLoop = () => {\n  runNextFrame = true;\n  useDefaultElapsed = true;\n  if (!isProcessing) onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\nexports.cancelSync = cancelSync;\nexports.default = sync;\nexports.flushSync = flushSync;\nexports.getFrameData = getFrameData;","map":{"version":3,"names":["Object","defineProperty","exports","value","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","createRenderStep","runNextFrame","toRun","toRunNextFrame","numToRun","isProcessing","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","add","indexOf","push","length","cancel","index","splice","delete","process","frameData","i","has","maxElapsed","useDefaultElapsed","frame","delta","timestamp","stepsOrder","steps","reduce","acc","key","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","forEach","getFrameData","default"],"sources":["C:/Users/nicks/bootcamp/Side Projects/Stasios/client/node_modules/framesync/dist/framesync.cjs.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nfunction createRenderStep(runNextFrame) {\n    let toRun = [];\n    let toRunNextFrame = [];\n    let numToRun = 0;\n    let isProcessing = false;\n    let flushNextFrame = false;\n    const toKeepAlive = new WeakSet();\n    const step = {\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: (frameData) => {\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexports.cancelSync = cancelSync;\nexports.default = sync;\nexports.flushSync = flushSync;\nexports.getFrameData = getFrameData;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}